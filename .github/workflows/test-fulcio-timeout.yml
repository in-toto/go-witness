name: Test Fulcio Token Timeout

on:
  push:
    branches: [ fix/fulcio-static-token-timeout ]
  pull_request:
    branches: [ main ]
    paths:
      - 'signer/fulcio/**'
      - '.github/workflows/test-fulcio-timeout.yml'

permissions:
  contents: read
  id-token: write  # Required for OIDC token

jobs:
  test-timeout-bug-on-main:
    name: Demonstrate Timeout Bug on Main Branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main  # Check out main branch to show the bug
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      
      - name: Add test to main branch
        run: |
          # Copy our test file to demonstrate the bug
          curl -s https://raw.githubusercontent.com/in-toto/go-witness/fix/fulcio-static-token-timeout/signer/fulcio/fulcio_timeout_test.go > signer/fulcio/fulcio_timeout_test.go
      
      - name: Run timeout test on main (should demonstrate bug)
        id: timeout-test
        run: |
          echo "Running test on main branch - should demonstrate the timeout issue..."
          if go test -v -timeout 5m -run TestGitHubActionsTokenTimeout ./signer/fulcio/; then
            echo "Test passed unexpectedly on main branch"
            echo "bug_exists=false" >> $GITHUB_OUTPUT
          else
            echo "Test failed as expected - demonstrating the bug exists in main"
            echo "bug_exists=true" >> $GITHUB_OUTPUT
          fi
        env:
          CI: "true"
        continue-on-error: true
          
      - name: Show test results
        run: |
          if [ "${{ steps.timeout-test.outputs.bug_exists }}" = "true" ]; then
            echo "✅ Successfully demonstrated the timeout bug exists in main branch"
          else
            echo "❌ Could not demonstrate the bug - test passed on main branch"
          fi
  
  test-timeout-bug-with-fix:
    name: Test Fix Works
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # This checks out our PR branch with the fix
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      
      - name: Run timeout test with fix
        run: |
          echo "Running test with our fix - should pass quickly..."
          go test -v -timeout 5m -run TestGitHubActionsTokenTimeout ./signer/fulcio/
          echo "✅ Test passed with the fix!"
        env:
          CI: "true"
  
  test-static-token:
    name: Test Static Token Usage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          
      - name: Run static token test
        run: |
          echo "Testing static token usage..."
          go test -v -timeout 30s -run TestStaticTokenUsage ./signer/fulcio/
        continue-on-error: true
        
  test-real-scenario:
    name: Test Real GitHub Actions Scenario
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go  
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          
      - name: Create test that uses real GitHub token
        run: |
          cat > signer/fulcio/fulcio_github_test.go << 'EOF'
          //go:build github_actions
          // +build github_actions
          
          package fulcio
          
          import (
              "context"
              "testing"
              "time"
          )
          
          func TestRealGitHubActionsToken(t *testing.T) {
              // This test uses the real GitHub Actions OIDC token
              fsp := New(
                  WithFulcioURL("https://fulcio.sigstore.dev"),
                  WithOidcIssuer("https://oauth2.sigstore.dev/auth"), 
                  WithOidcClientID("sigstore"),
              )
              
              ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)
              defer cancel()
              
              start := time.Now()
              _, err := fsp.Signer(ctx)
              elapsed := time.Since(start)
              
              t.Logf("Signer creation took: %v", elapsed)
              t.Logf("Error (if any): %v", err)
              
              // With the bug, this might timeout or take a long time
              // With the fix, it should be quick
              if elapsed > 10*time.Second {
                  t.Errorf("Signer creation took too long: %v", elapsed)
              }
          }
          EOF
          
      - name: Run real GitHub Actions token test
        run: |
          echo "Testing with real GitHub Actions OIDC token..."
          go test -v -tags github_actions -timeout 60s -run TestRealGitHubActionsToken ./signer/fulcio/
        continue-on-error: true